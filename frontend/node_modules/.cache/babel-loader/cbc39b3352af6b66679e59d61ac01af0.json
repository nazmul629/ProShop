{"ast":null,"code":"var _jsxFileName = \"/home/nazmul/Documents/React-Project/ProshopProject/ProShop/frontend/src/screen/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../component/Message';\nimport { addToCart } from '../actions/cartAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = ({\n  match,\n  location\n}) => {\n  _s();\n\n  const procutId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  console.log(cartItems);\n  useEffect(() => {\n    if (procutId) {\n      dispatch(addToCart(procutId, qty));\n    }\n  }, [dispatch, procutId, qty]);\n\n  const removeFormCartHandlar = id => {\n    console.log(\"Delete\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Shopping Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"Your cart is Empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: item.image,\n                alt: item.name,\n                fluid: true,\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${item.product}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: item.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: item.qty,\n                onChange: e => dispatch(addToCart(item.product, Number(e.target.value))),\n                children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: x + 1\n                }, x + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"2\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"dark\",\n                onClick: () => removeFormCartHandlar(item.product),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\" Subtotal(\", cartItems.reduce((acc, item) => acc + item.qty, 0), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), \"$\", cartItems.reduce()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/home/nazmul/Documents/React-Project/ProshopProject/ProShop/frontend/src/screen/CartScreen.js"],"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","CartScreen","match","location","procutId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","console","log","removeFormCartHandlar","length","map","item","image","name","product","price","e","target","value","Array","countInStock","keys","x","reduce","acc"],"mappings":"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","sourcesContent":["import React,  {useEffect }from 'react'\nimport { Link }  from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Row, Col, ListGroup,Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../component/Message'\nimport { addToCart } from '../actions/cartAction'\n\n\nconst CartScreen = ({match, location}) => {\nconst procutId = match.params.id\nconst qty = location.search ? Number(location.search.split('=')[1]):1\n\nconst dispatch =useDispatch()\n\nconst  cart = useSelector( (state) => state.cart)\nconst { cartItems} = cart\n\nconsole.log(cartItems)\n\n\nuseEffect( () =>{\n    if(procutId) {\n        dispatch(addToCart(procutId,qty))\n    }\n},[dispatch,procutId,qty])\n\nconst removeFormCartHandlar = (id) =>{\n    console.log(\"Delete\")\n}\n\n\n    return ( \n        <Row>   \n            <Col md={8}>\n                <h1> Shopping Chart</h1>\n                { cartItems.length === 0 ? (\n                    <Message>\n                        Your cart is Empty <Link to=\"/\">Go Back </Link>\n                    </Message>\n                ):(\n                    <ListGroup variant=\"flush\">  \n                        {cartItems.map( item =>(\n                        <ListGroup.Item key={item.product}>\n                            <Row>\n                                <Col md={2} >\n                                   <Image src={item.image}  alt={item.name} fluid rounded />  \n                                </Col>\n                                <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                </Col>\n                                <Col md={2}>{item.price}</Col>\n                                <Col md = {2}>\n                                <Form.Control\n                                        as='select'\n                                        value={item.qty}\n                                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                        > \n                                         \n                                        {[...Array(item.countInStock).keys()].map((x) => (\n                                            <option key={x + 1} value={x + 1}>\n                                            {x + 1}\n                                            </option>\n                                        ))}\n                                 </Form.Control>\n                             </Col>\n                                    <Col md=\"2\" > \n                                        <Button\n                                        type=\"button\"\n                                        variant=\"dark\"\n                                        onClick={() =>removeFormCartHandlar(item.product)}>\n                                            <i className=\"fas fa-trash\"/>\n                                        </Button>\n                                    </Col>\n\n                            </Row>\n                        </ListGroup.Item>\n                        ))}\n                    </ListGroup>)\n            }\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2> Subtotal({cartItems.reduce((acc,item)=>acc + item.qty, 0 )})</h2>\n                            ${cartItems.reduce()}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n           \n        </Row>\n    )\n}\nexport default CartScreen"]},"metadata":{},"sourceType":"module"}