{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/nazmul/Documents/React-Project/ProshopProject/ProShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAmC,0BAAnC;AACA,SAASC,kBAAT,EAA4BC,qBAA5B,QAAyD,4BAAzD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAACJ,kBADgB;AAE5BK,EAAAA,cAAc,EAACJ,qBAFa;AAG5BK,EAAAA,IAAI,EAACJ;AAHuB,CAAD,CAA/B;AAMA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBN,EAAAA,IAAI,EAAE;AAAEO,IAAAA,SAAS,EAAEN;AAAb;AADa,CAArB;AAMA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AACA,MAAMiB,KAAK,GAAGpB,WAAW,CACrBQ,OADqB,EAErBS,YAFqB,EAGtBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAHG,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools} from 'redux-devtools-extension';\nimport { productListReducer,productDetailsReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\n\nconst reducer = combineReducers({\n    productList:productListReducer,\n    productDetails:productDetailsReducer,\n    cart:cartReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n}\n\n\n\nconst middleware = [thunk]\nconst store = createStore(\n    reducer,\n    initialState,\n   composeWithDevTools(applyMiddleware(...middleware))\n    )\n\nexport default store"]},"metadata":{},"sourceType":"module"}